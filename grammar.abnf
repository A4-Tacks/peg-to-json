;; use ABNF like grammar
;; char-val -> regexp (add backslash escape)
;; add peg lookaheads `!` `&`
;; add empty `()`
;; remove num-var
;;
;; vim:nowrap
;; syn match abnfOption /[!&]/
;; syn match abnfEscape /\\"/ contained containedin=abnfString
;; hi link abnfEscape Special

comment     = ";[^\n]*\n"
_           = "[ \t\r\n]*" [comment _]
ident       = "(?![0-9])[0-9a-zA-Z\-_]+"
number      = "[0-9]+"
string      = "\"((?:\\"|[^\"\r\n])*)\""
repeat      = "\+"
            / "\*" [number]
            / number ["\*" [number]]
patatom     = ident !(_ "=")
            / string
            / "\[" _ patchoice _ "\]"
            / "\(" _ patchoice _ "\)"
            / "\(\)"
patops      = repeat _ patatom
            / "&"  patatom
            / "!"  patatom
            / patatom
patlist     = patops *(_ patops)
patchoice   = patlist *(_ "/" _ patlist)
decl        = ident _ "=" _ patchoice
decl-list   = _ [decl *(_ decl)] _
